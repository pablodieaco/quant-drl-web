version: "3.8"

services:
  postgres:
    image: postgres:17
    container_name: quant-drl-postgres
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 10s


  web:
    image: quant-drl-web:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: quant-drl-web
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8501:8501"
    env_file:
      - .env
    volumes:
      - .:/app
    working_dir: /app
    environment:
      PYTHONPATH: /app
    command: [
      "bash","-c","
        python web/db/create_tables.py &&
        python web/db/upload_companies.py &&
        python web/db/upload_models_data.py &&
        python web/db/upload_evaluation_data.py &&
        streamlit run web/app.py --server.port=8501 --server.enableCORS=false
      "
    ]

  # init-db:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: init-db
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   working_dir: /app
  #   environment:
  #     PYTHONPATH: /app
  #   env_file:
  #     - .env
  #   volumes:
  #     - .:/app
  #   entrypoint: >
  #     bash -c "
  #       python web/db/create_tables.py &&
  #       python web/db/upload_companies.py &&
  #       python web/db/upload_models_data.py &&
  #       python web/db/upload_evaluation_data.py
  #     "

  

  # web:
  #   image: quant-drl-web:latest
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: quant-drl-web
  #   depends_on:
  #     init-db:
  #       condition: service_completed_successfully
  #   working_dir: /app
  #   environment:
  #     PYTHONPATH: /app
  #   env_file:
  #     - .env
  #   volumes:
  #     - .:/app
  #   ports:
  #     - "8501:8501"
  #   command: streamlit run web/app.py --server.port=8501 --server.enableCORS=false

volumes:
  postgres_data:
    driver: local
